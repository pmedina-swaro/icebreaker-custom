<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BackButtonText" xml:space="preserve">
    <value>戻る</value>
    <comment>This is the back button text</comment>
  </data>
  <data name="ChatWithMatchButtonText" xml:space="preserve">
    <value>{0} とのチャット</value>
    <comment>Button text to initiate a chat with the person the user has been matched up with</comment>
  </data>
  <data name="ChatWithMessageGreeting" xml:space="preserve">
    <value>こんにちは</value>
    <comment>This is the greeting of the chat with matched member message</comment>
  </data>
  <data name="DoneButtonText" xml:space="preserve">
    <value>完了</value>
    <comment>This is the done button text</comment>
  </data>
  <data name="ErrorOccured" xml:space="preserve">
    <value>リクエストの処理中にエラーが発生しました。再試行しますか?</value>
    <comment>A generic message that is sent when there is an error occurring</comment>
  </data>
  <data name="InstallMessageKnownInstallerPart1" xml:space="preserve">
    <value>あなたがこれを読んでいるなら、それはおそらく {0} さんが私を **{1} チーム** に加えたからです。</value>
    <comment>Install message and also the welcome message when the app installer is known - {0} is the placeholder for the name of the user that has installed the app to the team, and {1} is the placeholder for the name of the team that the app has been installed to</comment>
  </data>
  <data name="InstallMessageKnownInstallerPart2" xml:space="preserve">
    <value>毎週新しい人とランダムにペアリングすることで、組織内のより多くの人と出会えるようにお手伝いします。あなたはより多くの友達を作り、あなたが一緒に働く人々について学ぶことができます。それはお互いに有利な状況です。</value>
    <comment>Part 2 of the install message when the name of the installer is known</comment>
  </data>
  <data name="InstallMessageKnownInstallerPart3" xml:space="preserve">
    <value>**新しい人に会うために、ただしっかりとぶら下がってください。すぐに招待メッセージをお送りします。**</value>
    <comment>Part 3 of the install message with the name of the installer known</comment>
  </data>
  <data name="InstallMessageUnknownInstallerPart1" xml:space="preserve">
    <value>あなたがこれを読んでいるのは、私が **{0} チーム** にインストールされているからです。 </value>
    <comment>Install message and also the welcome message when the app installer is not known - {0} is the placeholder for the name of the team that the app has been installed to</comment>
  </data>
  <data name="InstallMessageUnknownInstallerPart2" xml:space="preserve">
    <value>毎週新しい人とランダムにペアリングすることで、組織内のより多くの人と出会えるようにお手伝いします。あなたはより多くの友達を作り、あなたが一緒に働く人々について学ぶことができます。それはお互いに有利な状況です。</value>
    <comment>Part 2 of the install message when the name of the installer is not known</comment>
  </data>
  <data name="InstallMessageUnknownInstallerPart3" xml:space="preserve">
    <value>**新しい人に会うために、ただしっかりとぶら下がってください。すぐに招待メッセージをお送りします。**</value>
    <comment>Part 3 of the install message when the name of the installer is not known</comment>
  </data>
  <data name="MatchUpCardContentPart1" xml:space="preserve">
    <value>こんにちは、{1} の {0} です。毎週会う新しい同僚とあなたをペアにするボットです。今週のマッチは {2} です。</value>
    <comment>First part of the match up card main content</comment>
  </data>
  <data name="MatchUpCardContentPart2" xml:space="preserve">
    <value>気になる場合は、何かを設定してください。人との出会いは*簡単*です!</value>
    <comment>Second part of the match up card main content</comment>
  </data>
  <data name="MatchUpCardMatchedText" xml:space="preserve">
    <value>{0} と一致しました。</value>
    <comment>The text saying who the user has been matched up with</comment>
  </data>
  <data name="MatchUpCardTitleContent" xml:space="preserve">
    <value>マッチの時間です!</value>
    <comment>The title text for the pairup notification adaptive card</comment>
  </data>
  <data name="MeetupContent" xml:space="preserve">
    <value>今週の {0} が一致しているようです。時間があれば、コーヒーやランチ、電話で会うのもいいでしょう。</value>
    <comment>Content of the Meetup for the propose meeting</comment>
  </data>
  <data name="MeetupTitle" xml:space="preserve">
    <value>{0}/{1} の会議</value>
    <comment>The title for the Meetup - {0} is the name of the first person that user has been matched with and {1} is the name of the user</comment>
  </data>
  <data name="NextButtonText" xml:space="preserve">
    <value>次へ</value>
    <comment>This is the next button text</comment>
  </data>
  <data name="OptInConfirmation" xml:space="preserve">
    <value>おかえりなさい! 不在着信がありました。マッチを再起動しました。楽しんでください!</value>
    <comment>The confirmation reply that is sent when the user resumes the matches</comment>
  </data>
  <data name="OptOutConfirmation" xml:space="preserve">
    <value>準備完了です。マッチを一時停止しました。いつでもオンに戻すことができます。</value>
    <comment>The confirmation reply that is sent when the user pauses all matches</comment>
  </data>
  <data name="PausePairingsButtonText" xml:space="preserve">
    <value>すべてのマッチを一時停止</value>
    <comment>Button text to pause pairings</comment>
  </data>
  <data name="ProposeMeetupButtonText" xml:space="preserve">
    <value>会議の提案</value>
    <comment>Button text to propose the meetup with the match of the user</comment>
  </data>
  <data name="ResumePairingsButtonText" xml:space="preserve">
    <value>マッチを再開する</value>
    <comment>Button text to resume pairings</comment>
  </data>
  <data name="SalutationTitleText" xml:space="preserve">
    <value>こんにちは!</value>
    <comment>This is the text for the salutation in the adaptive cards when the bot is installed to a team and also when new users are added to the team</comment>
  </data>
  <data name="TakeATourButtonText" xml:space="preserve">
    <value>ツアーを開始</value>
    <comment>The text for the button which launches a tour when clicked</comment>
  </data>
  <data name="TourContentPageTitleText" xml:space="preserve">
    <value>ツアー</value>
    <comment>This is the tour content page title text</comment>
  </data>
  <data name="TourMatchesBodyText" xml:space="preserve">
    <value>必要な場合はいつでもマッチを一時停止します。この週はビジー状態ですか? 外出中ですか? 大丈夫です。いつでもボタンをクリックしてください。</value>
    <comment>This is the tour match task module body text</comment>
  </data>
  <data name="TourMatchesHeaderText" xml:space="preserve">
    <value>必要に応じてマッチを簡単に一時停止する</value>
    <comment>This is the tour match task module header text</comment>
  </data>
  <data name="TourWelcomeBodyText" xml:space="preserve">
    <value>毎週、新しい人とペアになります。その週に気になる場合は、会うことができます - 昼食をとるか、別の場所にいる場合は電話をかけます。最初のマッチとあなたをペアにする別のメッセージを探してください。</value>
    <comment>This is the tour welcome body text</comment>
  </data>
  <data name="TourWelcomeHeaderText" xml:space="preserve">
    <value>新しい友達を作り、コミュニティを構築する</value>
    <comment>This is the tour welcome header text</comment>
  </data>
  <data name="TourWelcomeImageAltText" xml:space="preserve">
    <value>ようこそ画像</value>
    <comment>This is the tour welcome image alt text</comment>
  </data>
  <data name="UnrecognizedInput" xml:space="preserve">
    <value>申し訳ありません。受信メッセージを処理できません。機能の詳細についてはツアーをご覧ください。</value>
    <comment>The text for the unrecognized input scenario</comment>
  </data>
  <data name="WelcomeTourTitle" xml:space="preserve">
    <value>ツアー</value>
    <comment>This is the title of the tour for the Icebreaker Bot</comment>
  </data>
</root>